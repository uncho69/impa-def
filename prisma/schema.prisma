generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model News {
  id          String      @id @default(cuid())
  title       String
  summary     String
  content     String      @db.Text
  category    NewsCategory
  author      String
  authorEmail String
  imageUrl    String?
  featured    Boolean     @default(false)
  status      NewsStatus  @default(DRAFT)
  views       Int         @default(0)
  readTime    String
  tags        String[]
  publishedAt DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("news")
}

model UserRole {
  id    String @id @default(cuid())
  email String @unique
  role  Role   @default(VIEWER)

  @@map("user_roles")
}

enum NewsCategory {
  GENERAL
  DEFI
  AIRDROPS
  CRYPTO_AI
  STABLECOINS
  REGOLAMENTAZIONI
  GAMING
  MEMECOINS
}

enum NewsStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model WhatsNewCard {
  id            String   @id @default(cuid())
  title         String
  description   String   @db.Text
  category      String
  imageUrl      String?
  link          String?
  isActive      Boolean  @default(true)
  showInLanding Boolean  @default(false)
  order         Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("whats_new_cards")
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}

